---
- name: Verify {{ prometheus_software_name_version }} permissions
  become: true
  file:
    path: '{{ prometheus_software_binary }}'
    mode: '0755'
    owner: root
    group: '{{ prometheus_group }}'

- name: Include task to setup {{ prometheus_software_name_version }} {{ ansible_service_mgr }} service
  include_tasks: '_service_mgr_{{ ansible_service_mgr | regex_replace("^(openrc|upstart)$", "init") }}.yml'

- name: Include task to setup firewall rules for {{ prometheus_software_name }}
  include_tasks: '_setup_firewall.yml'
  when:
    - (prometheus_manage_client_firewalld|bool or prometheus_manage_client_iptables|bool or prometheus_manage_client_iptables_raw|bool)
    - prometheus_software_instance_port|default(prometheus_software_port, true)
    - prometheus_server_ips|length >= 1

- name: Test that {{ prometheus_software_service_name }} {{ inventory_hostname }}:{{ prometheus_software_instance_port | default(prometheus_software_port, true) }} is accessible (software is running)
  wait_for:
    host: '{{ prometheus_software_host | default("0.0.0.0", true) }}'
    port: '{{ prometheus_software_instance_port | default(prometheus_software_port, true) }}'
    connect_timeout: 10
    state: started
    timeout: 30
  when:
    - prometheus_software_service_test|bool
    - prometheus_software_instance_port|default(prometheus_software_port, true)

- name: Test that {{ prometheus_software_service_name }} {{ inventory_hostname }}:{{ prometheus_software_instance_port | default(prometheus_software_port, true) }} is accessible from the Prometheus servers
  wait_for:
    host: '{{ inventory_hostname }}'
    port: '{{ prometheus_software_instance_port | default(prometheus_software_port, true) }}'
    connect_timeout: 10
    state: started
    timeout: 30
  delegate_to: '{{ prometheus_server_name }}'
  loop_control:
    loop_var: prometheus_server_name
  with_items: '{{ prometheus_servers|list }}'
  when:
    - prometheus_software_server_side_connect_test|bool
    - prometheus_software_instance_port|default(prometheus_software_port, true)
    - prometheus_servers|list

- block:
    - name: Set {{ prometheus_software_name_version }} tgroup facts
      set_fact:
        prometheus_client_fqdn: '{% if prometheus_tgroup_use_facts|bool %}{{ ansible_fqdn }}{% else %}{{ inventory_hostname }}{% endif %}'
        prometheus_client_hostname: '{% if prometheus_tgroup_use_facts|bool %}{{ ansible_hostname }}{% else %}{{ inventory_hostname_short }}{% endif %}'
        # Needed when in 'gather_facts' mode, some data is still pulled
        # from 'hostvars'
        prometheus_client_inventory_hostname: '{{ inventory_hostname }}'
        prometheus_tgroup_client_mode: true

    - name: Include task to configure {{ prometheus_software_name }} tgroup files on Prometheus servers
      include_tasks: _setup_client_tgroup.yml
  when:
    - prometheus_exporter|bool
    - prometheus_servers|list
    - prometheus_manage_client_tgroups|bool
